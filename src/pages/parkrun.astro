---
import '@fontsource/ibm-plex-mono/400.css'
import '@fontsource/ibm-plex-mono/500.css'
import { DateTime } from 'luxon'
import {
  ParkrunLineChart,
  Props as ParkrunLineChartProps,
} from '../components/ParkrunLineChart'
import { eventsLoader } from '../parkrun/events'
import { fetchParkrunResults } from '../parkrun/results'

const results = await fetchParkrunResults()

const parseRunTime = (runTime: string): number => {
  let time = 0

  for (const t of runTime.split(/:/g).map((x) => Number(x))) {
    time *= 60
    time += t
  }

  return time
}

const parkrunData: ParkrunLineChartProps['data'] = await Promise.all(
  results
    .map(({ EventDate, RunTime, EventNumber }) => ({
      epochTimeSecs: DateTime.fromISO(EventDate).toUnixInteger(),
      runTimeSecs: parseRunTime(RunTime),
      EventNumber,
    }))
    .filter(
      ({ epochTimeSecs }) => DateTime.fromSeconds(epochTimeSecs).year >= 2021
    )
    .map(async ({ EventNumber, ...data }) => ({
      eventName: (await eventsLoader.load(EventNumber)).EventShortName,
      ...data,
    }))
)
---

<html lang="en-GB" class="font-mono">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/jpeg" href="/favicon.jpeg" />
    <meta name="viewport" content="width=device-width" />
    <title>Parkrun results history - Sam Rowe</title>
  </head>
  <body class="flex flex-col text-sm items-center">
    <div class="my-12">
      <h1 class="text-lg mb-12">Parkrun history</h1>

      <ParkrunLineChart data={parkrunData} client:load />
    </div>
  </body>
</html>
